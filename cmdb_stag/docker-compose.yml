# Use root/example as user/password credentials
version: '2'


# docker-compose up -d --force-recreate --build
# services, version, networks, volumes, and extensions
# 提权，开启服务
# docker run --privileged -d -p 80:80 -v /apps/cmdb/src/CMDB_Backend:/data/server --net cmdb_stag --name devops_cmdb devops_cmdb_server /usr/sbin/init
services:
    cmdb.server:
        container_name: cmdb_server
#        build:
#            context: .
#            dockerfile: build/Dockerfile
        image: cmdb_base:v2.0
        working_dir: /data/server
        user: root
        privileged: true
        tty: true
        command: ['/usr/sbin/init']
#        command: ['pip', 'install', '-r', '/apps/install/requirements.txt']
#        entrypoint: 'python /apps/manage.py runserver 0.0.0.0:80'
        volumes:
            - $PWD/src/CMDB_Backend:/data/server
        ports:
            - 80:80
        depends_on:
            - cmdb_msql
#        env_file:
#            - conf_stag/.env
        networks:
            - cmdb_stag

#    cmdb.tasks:
#        container_name: cmdb_tasks

    cmdb_msql:
        # restart: always
        container_name: cmdb_mysql
        restart: unless-stopped
        image: mysql:5.6.41
#        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        command: --character-set-server=utf8 --collation-server=utf8_unicode_ci
        user: root
#        privileged: true
        # Errcode: 13 - Permission denied)
#        volumes:
#            - /data/db/cmdb/mysql:/var/lib/mysql
          #     - /etc/mysql/mysql.conf.d/mysqld.cnf:/tmp/docker/mysql/conf/mymysqld.cnf
          # - /var/run/mysqld/mysqld.sock
        environment:
            - TZ=Asia/Shanghai
            - MYSQL_DATABASE=dbname
            - MYSQL_USER=user
            - MYSQL_PASSWORD=********
            - MYSQL_ROOT_PASSWORD=********
        ports:
            - 33306:3306
        networks:
            - cmdb_stag

#    cmdb.redis:
#        restart: always
#        container_name: cmdb_redis
#        image: redis:4.0.11
#        command: redis-server --requirepass devops_hqyg_123
##        configs:
##            - source: /tmp/test/redis/conf
##              target: /usr/local/etc/redis
#        ports:
#            - 6379:6379

    cmdb_rabbitmq:
        restart: unless-stopped
        container_name: cmdb_rabbitmq
        image: rabbitmq:3.7.3
#        ports:
#            - 15672:15672
#            - 5672:5672
        environment:
            - RABBITMQ_DEFAULT_VHOST=cmdb
        networks:
            - cmdb_stag


# first create network
# docker network create network-alias
# docker network create -d bridge network-alias
networks:
    cmdb_stag:
#        driver: bridge
        external: true

